{
  "name": "pluralsight-redux-starter",
  "version": "1.0.0",
  "description": "Starter kit for React and Redux Pluralsight course by Cory House",
  "author": "Cory House",
  "license": "MIT",
  "//": "Tip: npm scripts automate our build",
  "//": "alternative for this include gulp and grunt",
  "scripts": {

    "//": "_Tip: by convention npm will run the prestart script before start script",
    "//": "because it's prefixed with the word 'pre",
    "//": "can also add a 'post' start script",
    "//": "Que?: research other options for npm scripts!",
  "prestart": "babel-node tools/startMessage.js",

    "//": "Tip: by convention npm start should start your app",
    "//": "we need to use 'babel-node' to compile because we used ES6 inside",
    "//": "of srcServer",
    "//": "Que?: babel-node? Look up docs. Is it packaged inside of one of the",
    "//": "dependencies below? Where does it come from? Why is is accessible?*/",

    "//": "Tip: 'npm start' now runs multiple scripts at once",
    "//": "--parallel flag, instruction to run anything listed to the right at the same time",
    "//": "now, 'npm start' will do the following:",
    "//": "display start message, because that is in prestart",
    "//": "run webpack",
    "//": "start out dev webserver",
    "//": "open our app in the default browser",
    "//": "will lint our files",
    "//": "will rerun webpack and eslint any time we hit save",
    "start": "npm-run-all --parallel open:src lint:watch test:watch",

    "//": "Tip:",
    "//": "alot like refactoring to separate well named functions",
    "//": "best if each script has a clear name   ",
    "open:src": "babel-node tools/srcServer.js",

    "//": "_Tip:",
    "//": "eslint lacks watch functionality",
    "//": "Que?: What is watch functionality?",
    "//": "so we are using a handy npm package called eslint watch which has an executable called esw.",
    "//": "watch wraps eslint and provides file watching functionality, it also offers enhanced command line output",
    "//": "telling eslint to watch for webpack.config files",
    "//": "and any files in our src directory or our tools directory",
    "lint": "node_modules/.bin/esw webpack.config.* src tools",

    "//": "_Tip:",
    "//": "oddly, eslint watch(esw) doesn't watch files by default",
    "//": "you have to pass it a command line flag to tell it you want to enable file watch",
    "//": "creating a separte npm script that will watch our files.",
    "//": "weird syntax, we are jsut running the lint script above",
    "//": "this syntax lets us pass the watch flag to our lint script",
    "//": "so this line is saying, run the eslint script, but pass the watch flag to eslint watch(esw)",
    "//": "Que?: This is a mess! Would be great is this was all contained in the lint script...confusing.",
    "lint:watch": "npm run lint -- --watch",

    "//": "_Tip:",
    "//": "runs mocha",
    "//": " specifies reporter",
    "//": " progress reporter is compact and doesn't add a lot of noise to the terminal",
    "//": " tell mocha to run the testSetup",
    "//": " and to run any tests that it finds in our src directory",
    "//": " following convention of ending all test files in test.js",
    "//": " the spec reporter can be more helpful when writing test",
    "//": " will see more detail about the specific tests that we've written",
    "test": "mocha --reporter spec tools/testSetup.js \"src/**/*.test.js\"",

    "//": "_Tip:",
    "//": "calling test script and telling it to use the watch flag ",
    "//": "run our tests and watch our files",
    "test:watch" : "npm run test -- --watch",

	"clean-dist": "npm run remove-dist && mkdir dist",


	"prebuild": "npm-run-all clean-dist test link build:html",
	"build": "babel-node tools/build.js",
	"postbuild": "babel-node tools/distServer.js",
    "//": "_Tip: used to connect react container components to redux",
    "//": "connects the store to container components",
    "//": "react specific library, you can use redux with other libraries as well, like angular etc..."
  },
  "dependencies": {
    "babel-polyfill": "6.8.0",
    "bootstrap": "3.3.6",
    "jquery": "2.2.3",
    "react": "15.0.2",
    "react-dom": "15.0.2",
    "react-redux": "4.4.5",
    "react-router": "2.4.0",
    "react-router-redux": "4.0.4",
    "redux": "3.5.2",
    "redux-thunk": "2.0.1",
    "toastr": "2.1.2"
  },
  "devDependencies": {
    "babel-cli": "6.8.0",
    "babel-core": "6.8.0",
    "babel-loader": "6.2.4",
    "babel-plugin-react-display-name": "2.0.0",
    "babel-preset-es2015": "6.6.0",
    "babel-preset-react": "6.5.0",
    "babel-preset-react-hmre": "1.1.1",
    "babel-register": "6.8.0",
    "colors": "1.1.2",
    "compression": "1.6.1",
    "cross-env": "1.0.7",
    "css-loader": "0.23.1",
    "enzyme": "2.2.0",
    "eslint": "2.9.0",
    "eslint-plugin-import": "1.6.1",
    "eslint-plugin-react": "5.0.1",
    "eslint-watch": "2.1.11",
    "eventsource-polyfill": "0.9.6",
    "expect": "1.19.0",
    "express": "4.13.4",
    "extract-text-webpack-plugin": "1.0.1",
    "file-loader": "0.8.5",
    "jsdom": "8.5.0",
    "mocha": "2.4.5",
    "nock": "8.0.0",
    "npm-run-all": "1.8.0",
    "open": "0.0.5",
    "react-addons-test-utils": "15.0.2",
    "redux-immutable-state-invariant": "1.2.3",
    "redux-mock-store": "1.0.2",

    "rimraf": "2.5.2",
    "sass-loader": "0.5",
    "style-loader": "0.13.1",
    "url-loader": "0.5.7",
    "webpack": "1.13.0",
    "webpack-dev-middleware": "1.6.1",
    "webpack-hot-middleware": "2.10.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/coryhouse/pluralsight-redux-starter"
  }
}
